[
  {
    "_id": {
      "$id": "53af0c091414141d48963a0a"
    },
    "short_abstract": "Intro into Redis, Lua scripts i debuggin of Lua scripts in Redis. Real life examples how can Redis speed up your application.",
    "language": "English",
    "title": "Redis in practice",
    "level": "Intermediate",
    "submitted": {
      "sec": 1401760371,
      "usec": 0
    },
    "row_id": 15,
    "long_abstract": "Interesting things about redis. Horizontal and vertical scailing. Writing Lua scripts to reduse network traffic and to speed up whole application. Not so obvious usages of redis in real life.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bad14141403187e96a5"
      },
      "github": "zlikavac32",
      "short_bio": "Student on FER, Computer science section. I love artificial intelligence and algorithms. In my free time I drive my bike and go hunting.",
      "name": "Marijan Šuflaj",
      "twitter": "",
      "long_bio": "Young developer willing to learn new things and explore new technologies. Also I like to share my experience about what I know and what I have learned so far. As a student, I work for Trikoder d.o.o. and with few other developers I take care of njuskalo.hr.",
      "image": "http://2014.webcampzg.org/images/speakers/marijan-suflaj.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53af0c0a1414141d48963a0c"
    },
    "short_abstract": "Importance of monitoring key aspects of your web application and organizing gathered data so you can instinctively react and fix problems.",
    "language": "English",
    "title": "Dashboards for devops and other web folks",
    "level": "Elementary",
    "submitted": {
      "sec": 1401926723,
      "usec": 0
    },
    "row_id": 17,
    "long_abstract": "It would be nice if devops could sit down with web applications and discuss their feelings over cup of coffee. Instead, they have to jump through hoops and figure out what is going on by using tools such as StatsD/Graphite, Nagios, Cacti, New relic and many others. Successful data collection is only half of the solution. Presenting real time data in a way that it intuitively shows you that something is different and aiding you in pinpointing problem makes up other half. \nTalk will focus on importance of monitoring web applications and give advice on how to organize your dashboard for quick reactions. Find out tips and tricks as well as what impact had running a dashboard monitor on overall project performance.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bae14141403187e96a8"
      },
      "github": "",
      "short_bio": "Passion driven developer, involved in running local PHP usergroup and mentoring new developers. Fails like a pro at being a stand-up comedian.",
      "name": "Luka Mužinić",
      "twitter": "lmuzinic",
      "long_bio": "Passionate about being a developer, teacher and mentor for newcomers into world of programming. Involved in organizing ZgPHP user group meetings, workshops and conferences. \nCurrently working as senior software engineer for HomeExchange. Enjoys playing and watching odd and unpopular sports, at least in Croatia.",
      "image": "http://2014.webcampzg.org/images/speakers/luka-muzinic.png",
      "shirt": "Male XL"
    }
  },
  {
    "_id": {
      "$id": "53af0c0b1414141d48963a12"
    },
    "short_abstract": "A talk about one possible solution to the JavaScript problem. I'll talk about the way I develop for web — React/OM provides expressive frontend; Elixir provides scalable backend. ",
    "language": "English",
    "title": "Modern Approaches to the Javascript Problem",
    "level": "Intermediate",
    "submitted": {
      "sec": 1402213361,
      "usec": 0
    },
    "row_id": 23,
    "long_abstract": "It's well known that JavaScript wasn't designed to be anything more than a weapon in the Browser Wars, adding a layer of interactivity to the pages of the ancient Web by means of writing very short scripts.\n\nWhen such a language grows big and starts to be used to implement complex systems we face a lot of problems. To name a few — defensive programming, non-existent type system, fragile application architecture. It also yields a bigger problem of programmers not being able to write expressive and safe code.\n\nIn this talk we examine the modern approaches to fixing JavaScript. Our goal is to find a solution that allows us to write expressively and to get strong guarantees for applications we build.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0baf14141403187e96ac"
      },
      "github": "manpages",
      "short_bio": "Latvian. Zera yisrael, programmer, cryptoconformist, caldari. Erlang professional. I enjoy discrete math and progressive rock. 0xFD6ADF70.",
      "name": "Jonn Mostovoy",
      "twitter": "podmostom",
      "long_bio": "Born in Rīga, Latvia. Installed my first UNIX-like system when I was 14. Worked as a web developer since I was 16. Worked in banking. Eventually got tired of \"mainstream\" \"boring\" technology stacks as those are too verbose and clumsy and switched to Erlang. Worked as a senior Erlang developer, then worked in a Canadian startup. Kinda known for implementing pretty printing for Elixir standard library. Now freelancing and available for hire.",
      "image": "http://2014.webcampzg.org/images/speakers/jonn-mostovoy.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53af0c0b1414141d48963a14"
    },
    "short_abstract": "Shaping REST API responses with advanced query algebra.",
    "language": "English",
    "title": "Beyond GET",
    "level": "Intermediate",
    "submitted": {
      "sec": 1402846797,
      "usec": 0
    },
    "row_id": 25,
    "long_abstract": "Currently, REST APIs give us little control over the structure of data that is to be returned. We can fetch a list of items, for example articles, but we don't have control over embedding nested objects, such as comments, or filtering and ordering results by certain attributes. With standardized query logic passed via URL params, clients are able to shape results according to their needs.\n\nThe example query below would result in a list of articles ordered by creation date, whose title contains \"REST\" with embedded author objects:\n\n```\nGET /articles?title=%REST%&embed=author&order=created_at:desc\n```\n\nThis talk will give a proposal of a standardized query algebra, which various famous APIs already partially implement using differing syntaxes and feature subsets.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bb014141403187e96ae"
      },
      "github": "vdragsic",
      "short_bio": "Currently stuck in backend land with Ruby in hand and functional programming on mind.",
      "name": "Veljko Dragšić",
      "twitter": "vdragsic",
      "long_bio": "I'm software engineer living in Zagreb, Croatia, with several years of experience in software development and system administration.\n\nI currently work at Bitovi on building data aggregation, REST API platform in Ruby. Other work is related on frontend development in CanJs.\n\nPrevious experience would include Linux administration, network stack, PostgreSQL, C, web development in Python/Django and parallel computing in MPI and OpenCL.\n\nI'm passionate about functional programming and would consider myself as Haskell newbie.",
      "image": "http://2014.webcampzg.org/images/speakers/veljko-dragasic.png",
      "shirt": "Male S"
    }
  },
  {
    "_id": {
      "$id": "53af0c0d1414141d48963a1b"
    },
    "short_abstract": "Vagrant let you build development environments that are portable and reproducible",
    "language": "English",
    "title": "Vagrant to the rescue",
    "level": "Elementary",
    "submitted": {
      "sec": 1403558813,
      "usec": 0
    },
    "row_id": 32,
    "long_abstract": "Many developers know the pain of setting up a development machine and share the setup with the team - Putting the same folders in the same place, keeping configurations in sync and managing external dependencies. Vagrant solves this problem by creating a development environment inside a virtual machine and making it easy to share with other developers. \nWithin this talk, I'll take the audience on a trip from a time where everybody would install stuff on localhost until the software starts working to a land where the environment one develops in mirrors the production environment as closely as possible without changing the laptop/pc of the developer. I'll talk about devops and configuration management briefly and show how one can get started with vagrant.\nAfter this talk, the audience knows what problems vagrant solves and how to get started.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bb214141403187e96b4"
      },
      "github": "Sgoettschkes",
      "short_bio": "#music #bodymod #symfony #agile #devops",
      "name": "Sebastian Göttschkes",
      "twitter": "Sgoettschkes",
      "long_bio": "I co-founded my first company, Pictureplix, while still in university. Being responsible for the API that connected frontends with our production backend, I learned how to scale stuff and how important it is to develop with a stack that is close to the production environment. I joined wogibtswas.at, a location based bargain hunting plattform in mid 2013 and try to guide a team of software developers through the fog of business requirements. I am using PHP and Python in my free time for various spare projects. All of them run with vagrant of course.",
      "image": "http://2014.webcampzg.org/images/speakers/sebastian-gottschkes.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53af0c061414141d489639fd"
    },
    "short_abstract": "See why this award winning Python project has relevance for your work life through getting your servers under control",
    "language": "English",
    "title": "Ansible, just orchestrate it",
    "level": "Intermediate",
    "submitted": {
      "sec": 1400967600,
      "usec": 0
    },
    "row_id": 2,
    "long_abstract": "Everyone should be using Vagrant or some similar tool for local developer environment.\nStill those containers/VMs need to be configured somehow and on top of that your configuration system should be able to manage your staging and production servers as well, you could be using Puppet, Chef, Salt, shell scripts to achieve this.\nRecently a 3rd generation configuration management system has thown its hat into the ring, and that tools name is Ansible.\nThe talk will show how Ansible approaches configuration management, software deployment, remote execution and other tasks.\nWe will examine how easy it is to get up and running and manage single or multiple concurrent servers in parallel, what are the differences to Puppet, Chef etc and how to customize Ansible to your needs. \n\nJoin us for this talk and you’ll see why this award winning Python project has relevance for your work life through getting your servers under control.\n",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0baa14141403187e969b"
      },
      "github": "vranac",
      "short_bio": "I am a developer, consultant, mercenary (used to be known as freelancing), writing terrible code that performs exceptionally, wrangling elePHPants and pythons\n",
      "name": "Srdjan Vranac",
      "twitter": "vranac",
      "long_bio": "I am a developer, consultant, mercenary (used to be known as freelancing).\nI lead a small team that works on various projects ranging from small family businesses to Fortune 500 companies.\nI write terrible code that performs exceptionally and currently I am wrangling elePHPants and Pythons....\nMy Interests are process automation, continuous integration and delivery, clean code, testing, best practices (you have to know them so you can break them if you have to), distributed systems\n",
      "image": "http://2014.webcampzg.org/images/speakers/srdjan-vranac.png",
      "shirt": "Male XXL"
    }
  },
  {
    "_id": {
      "$id": "53af0c071414141d48963a00"
    },
    "short_abstract": "Clojure is a modern Lisp targeting JVM, CLR, and JavaScript. Is waking up mid-night screaming due to unmatched parentheses worth it?",
    "language": "English",
    "title": "How, When, and Why Clojure?",
    "level": "Elementary",
    "submitted": {
      "sec": 1401147239,
      "usec": 0
    },
    "row_id": 5,
    "long_abstract": "Lisp, the influential second-oldest high-level programming language, has been called \"the most intelligent way to misuse a computer\" and \"the greatest single programming language ever designed\". Despite the prevalence of ALGOL-inspired languages, Lisp and its ideas have survived both in academia and industry through generations of programmers, although its arcane origins and seemingly odd syntax weren't always too attractive to newcomers.\n\nClojure is a recent dialect of Lisp with JVM, CLR and JavaScript as its primary targets. By combining the popularity of its well-established target platforms with a focus on functional programming and immutability, it quickly rose to fame as a modern, usable, robust general-purpose programming language.\n\nIn this talk, we'll quickly introduce Clojure and its ecosystem (why?), go through a couple of use-cases including our first-hand experience with Clojure at Neutrino (when?), and see how it fits into existing systems and plays with others (how?).\n\n(with-conference {:name \"WebCampZG 2014\"}\n    (praise \"McCarthy\"))",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bab14141403187e969e"
      },
      "github": "nikolaplejic",
      "short_bio": "I like programming computers.",
      "name": "Nikola Plejić",
      "twitter": "nikolaplejic",
      "long_bio": "Currently running a small development shop in Zagreb called Neutrino, I work on stuff that has an uncanny tendency to end up on the web. My weapons of choice include PHP, JavaScript, Clojure, Python, C#, and being aware that there's an entire world of other languages, technologies, and approaches to developing software out there.\n\nI'm a big fan of free software, a regular at Zagreb's Hacklab in Mama, and a member of various Croatian tech communities.",
      "image": "http://2014.webcampzg.org/images/speakers/nikola-plejic.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53af0c071414141d48963a03"
    },
    "short_abstract": "Implementing highly concurrent backend systems using actor model.",
    "language": "English",
    "title": "Thinking in actors",
    "level": "Advanced",
    "submitted": {
      "sec": 1401279570,
      "usec": 0
    },
    "row_id": 8,
    "long_abstract": "This talk will present a medium-level design of the live betting system I've built for a sport betting company. The aim is to illustrate how can we use Elixir/Erlang powered actors to push frequent updates to a large number of connected users in real-time.\n\nAssuming an audience of experienced backend developers, the talk will provide a bare minimum of theory, and then focus on presenting various decisions made in the system, starting from accepting the data from the external provider, reconciling it with internal database, categorizing it, and pushing it to end-users (browsers).\n\nAfter the talk, the audience should have a feeling on how to reason about a complex system relying on the concept of actors.\n\nThis will be a highly technical talk. Expect a lot of diagrams with an occasional code snippet in Elixir.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bac14141403187e96a1"
      },
      "github": "sasa1977",
      "short_bio": "All-round developer, Elixir/Erlang fanatic, aspiring technical writer, occasional speaker.",
      "name": "Saša Jurić",
      "twitter": "sasajuric",
      "long_bio": "A freelancer working on a revolutionary data anonymization system for Aircloak with previous experience in large web and desktop projects using various languages and technologies such as Elixir, Erlang, Ruby, JavaScript, C#, C++. The author of the pending Manning book \"Elixir in Action\", and an occasional blogger (http://theerlangelist.com). ",
      "image": "http://2014.webcampzg.org/images/speakers/sasa-juric.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53b1d3ce141414115c7c9b04"
    },
    "short_abstract": "Ensuring data consistency and mutation accountability when aggregating differing data streams, while still making that data your own.",
    "language": "English",
    "title": "Agreggating data consistently and accountably",
    "level": "Advanced",
    "submitted": {
      "sec": 1404138998,
      "usec": 0
    },
    "row_id": 47,
    "long_abstract": "Imagine you're dealing with social media networks. You're fetching a status from Facebook and building an entity of your own out of it. After a while, a user of your system wants to edit that entity, for example, assign some meta-data to it. Meanwhile, you decide that a tweet coming in from Twitter represents essentially the same entity as that Facebook post you already have, and you want to modify your entity with this new information. With all these differing and concurrent data streams, how do you know who updated what, and what's the real state of data?\n\nIn this talk, an abstraction layer that was built to solve the described problem will be presented. It's called an append-only architecture. It stores each new data atom separately and incrementally builds entities as new atoms come in. Consequently, it enforces consistency and provides accountability by replaying all data mutations and verifying that the data should indeed have the state that it has.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53b1d3ce141414115c7c9b03"
      },
      "github": "neektza",
      "short_bio": "PLT guy, always interested in learning (cool) new stuff and working on challenging projects.",
      "name": "Nikica Jokić",
      "twitter": "neektza",
      "long_bio": "Software developer, working for @bitovi. I dig programming languages, all kinds.",
      "image": "http://2014.webcampzg.org/images/speakers/nikica-jokic.png",
      "shirt": "Male L"
    }
  },
  {
    "_id": {
      "$id": "53b1d3ce141414115c7c9b06"
    },
    "short_abstract": "ZeroMQ is a messaging library which lets you write scalable and performant distributed software. Or, as some say, sockets on steroids.\n",
    "language": "English",
    "title": "ZeroMQ - toolset for high-performance distributed applications",
    "level": "Advanced",
    "submitted": {
      "sec": 1404151618,
      "usec": 0
    },
    "row_id": 48,
    "long_abstract": "ZeroMQ has quite a misleading name. It is not really a classic message queuing solution at all - it is a messaging library which simplifies the task of writing high-performance and scalable distributed applications.\n\nZeroMQ abstracts the standard sockets and provides building blocks for almost any distributed scenario and topology: from classic publish-subscribe pattern between independent services to cross-thread communication inside a process, while introducing a very low overhead, compared to alternatives. It integrates well with whole range of technologies from Python and Ruby, over Java and C# to C++ and Go.\n\nThis talk will discuss various distributed/concurrent scenarios and show how ZeroMQ helps to implement appropriate solutions. Of course, the pitfalls and limitations will be discussed, too.",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53b1d3ce141414115c7c9b05"
      },
      "github": "zdeslav",
      "short_bio": "Freelance software developer, with more than 15 years of experience, mostly doing C++, Python and .NET. ",
      "name": "Zdeslav Vojković",
      "twitter": "zdeslav_v",
      "long_bio": "Zdeslav Vojkovic started programming ages ago, when ZX Spectrum and C64 were synonyms for home computer. \n\nHe writes code professionally for more than 15 years, has worked in various industries, from automotive to financial, and is co-owner of a small software development workshop where he works as a consultant/contractor/whatever for various clients whom he tries to educate about advantages of open source software.\n\nIn his spare time, he tries to tame his three kids, without significant success.\n",
      "image": "http://2014.webcampzg.org/images/speakers/zdeslav-vojkovic.png",
      "shirt": "Male XL"
    }
  },
  {
    "_id": {
      "$id": "53b320ab141414136846868f"
    },
    "short_abstract": "How do you develop a 3D flight simulator for an experimental drone? Take an open source gaming engine, hone in a lot of Python, and here is your flying drone!",
    "language": "English",
    "title": "Gaming a drone simulator",
    "level": "Elementary",
    "submitted": {
      "sec": 1404238539,
      "usec": 0
    },
    "row_id": 56,
    "long_abstract": "This simulator was developed for an EU research project: AIRobots. \nHow do you tie the real drone control system, based on Simulink, to Blender, in order to create a realistic 3D simulation of the control behaviour? Can you really use the physics engine of Blender to compute the behaviour? Where did we stop? What did we achieve? During this talk, I'll walk you through the tools and libraries required for this project, its many pitfalls and its successes. ",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53b320ab141414136846868e"
      },
      "github": "acbellini",
      "short_bio": "If being curious, enjoying new technologies, loving to study and tear apart tools and architecture means being young, then I'm a very young engineer :)",
      "name": "Anna Chiara Bellini",
      "twitter": "annachiara_b",
      "long_bio": "With almost twenty years of experience in development, I have been working for any kind of project and any size of company, From micro-startups with crazy hours and no rules to large organizations with hyper-detailed specs. In between I've worked on several research projects and I've taught a lot.\nRight now I'm working almost exclusively as a freelancer and trying to connect with as many developers as possible. My current goal is to become proficient in data science. ",
      "image": "http://2014.webcampzg.org/images/speakers/anna-chiara-bellini.png",
      "shirt": "Female M"
    }
  },
  {
    "_id": {
      "$id": "53af0c0f1414141d48963a22"
    },
    "short_abstract": "Did you ever wonder how testing at Google looks like? What tools we use to help us out and how do we measure and act on test coverage?\n",
    "language": "English",
    "title": "Measuring test coverage at Google",
    "level": "Intermediate",
    "submitted": {
      "sec": 1403971939,
      "usec": 0
    },
    "row_id": 39,
    "long_abstract": "A short introduction on the way Google tests it's products, with a short overview of the development process and what tools we use.\n\nThis will be followed by a more detailed presentation of how automated testing is performed during development. This part of the presentation will especially focus on use of code coverage measurement and how we use code coverage to improve code quality and engineering productivity.\n\nIn the end, I will present the vast amount of coverage data, spanning more than 100.000 commits, we have collected and some more widely applicable conclusions we have reached.\n",
    "status": "accepted",
    "speaker": {
      "_id": {
        "$id": "53af0bb314141403187e96ba"
      },
      "github": "ivankovic",
      "short_bio": "Wizard Hacker",
      "name": "Marko Ivanković",
      "twitter": "",
      "long_bio": "Senior Software Engineer in Test at Google. Tech lead in the Ads Engineering Productivity group in Zurich. Specializing in test coverage and random data generation.\n\nMSc of Computer Science at FER - University of Zagreb.\n",
      "image": "http://2014.webcampzg.org/images/speakers/marko-ivankovic.png",
      "shirt": "Male XL"
    }
  }
]